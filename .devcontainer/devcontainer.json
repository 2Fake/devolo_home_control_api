{
	"name": "devolo Home Control API",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.6, 3.7, 3.8, 3.9
			"VARIANT": "3.8"
		}
	},
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.formatting.provider": "yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"python.linting.enabled": true,
		"python.linting.flake8Enabled": true,
		"python.linting.mypyEnabled": true,
		"python.linting.pylintEnabled": true,
		"python.linting.pylintArgs": [
			"--disable=C,R",
			"--enable=useless-suppression",
		],
		"python.sortImports.path": "/usr/local/bin/isort",
		"python.sortImports.args": [
			"--settings-path=/workspaces/devolo_home_control_api/setup.cfg",
		],
		"python.testing.nosetestsEnabled": false,
		"python.testing.pytestEnabled": true,
		"python.testing.unittestEnabled": false,
		"editor.formatOnSave": true,
		"files.trimTrailingWhitespace": true,
		"files.trimFinalNewlines": true,
		"files.insertFinalNewline": true,
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.vscode-pylance",
		"sourcery.sourcery",
		"visualstudioexptteam.vscodeintellicode",
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip install -e .[test]",
}
